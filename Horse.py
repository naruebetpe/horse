import streamlit as st
import pandas as pd
import numpy as np

st.title("üêé ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡πÅ‡∏ó‡∏á‡∏°‡πâ‡∏≤ (Risk Calculator)")

# ‡∏™‡πà‡∏ß‡∏ô‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏°‡πâ‡∏≤
st.header("1Ô∏è‚É£ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏°‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡∏á‡∏ö‡∏•‡∏á‡∏ó‡∏∏‡∏ô")
num_horses = st.number_input("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏°‡πâ‡∏≤ (5-20 ‡∏ï‡∏±‡∏ß)", min_value=5, max_value=20, value=10)
budget = st.number_input("‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏£‡∏ß‡∏° (‡∏ö‡∏≤‡∏ó)", min_value=100.0, value=1000.0, step=50.0)

# ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏°‡πâ‡∏≤‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ï‡∏±‡∏ß
st.header("2Ô∏è‚É£ ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏°‡πâ‡∏≤‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ï‡∏±‡∏ß")
data = []
for i in range(num_horses):
    st.subheader(f"üê¥ ‡∏°‡πâ‡∏≤ {i+1}")
    col1, col2, col3 = st.columns(3)
    with col1:
        odds = st.number_input(f"‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πà‡∏≠‡∏£‡∏≠‡∏á (odds) ‡∏°‡πâ‡∏≤ {i+1}", min_value=1.1, value=10.0, step=0.1, key=f"odds_{i}")
    with col2:
        ticket_price = st.number_input(f"‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡∏±‡πã‡∏ß ‡∏°‡πâ‡∏≤ {i+1} (‡∏ö‡∏≤‡∏ó)", min_value=10.0, value=50.0, step=5.0, key=f"price_{i}")
    with col3:
        form_score = st.slider(f"‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏ü‡∏≠‡∏£‡πå‡∏° (1-10) ‡∏°‡πâ‡∏≤ {i+1}", min_value=1, max_value=10, value=5, key=f"form_{i}")
    data.append({"number": i+1, "odds": odds, "ticket_price": ticket_price, "form_score": form_score})

df = pd.DataFrame(data)

# ‡∏õ‡∏∏‡πà‡∏°‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå
if st.button("üöÄ ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡πÅ‡∏•‡∏∞‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô"):

    # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÇ‡∏î‡∏¢‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏à‡∏≤‡∏Å 1/odds + ‡∏ü‡∏≠‡∏£‡πå‡∏°
    df["approx_prob"] = (1 / df["odds"]) * (df["form_score"] / 5)
    df["approx_prob"] /= df["approx_prob"].sum()  # ‡∏õ‡∏£‡∏±‡∏ö‡πÉ‡∏´‡πâ‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏£‡∏ß‡∏°‡πÄ‡∏õ‡πá‡∏ô 1

    # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì expected return
    df["expected_return"] = df["approx_prob"] * df["odds"] * df["ticket_price"]

    # ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô
    safe_df = df[df["approx_prob"] >= 0.03].copy()  # ‡∏Ñ‡∏±‡∏î‡∏ï‡∏±‡∏ß‡∏ó‡∏µ‡πà‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡πÑ‡∏°‡πà‡∏ô‡πâ‡∏≠‡∏¢‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ
    weights = safe_df["expected_return"] / safe_df["expected_return"].sum()
    safe_df["budget_alloc"] = weights * budget
    safe_df["tickets"] = np.floor(safe_df["budget_alloc"] / safe_df["ticket_price"])
    safe_df["used_money"] = safe_df["tickets"] * safe_df["ticket_price"]
    used_total = safe_df["used_money"].sum()

    # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ß‡πà‡∏≤‡∏ñ‡πâ‡∏≤‡πÅ‡∏ó‡∏á‡∏ñ‡∏π‡∏Å‡∏à‡∏∞‡πÑ‡∏î‡πâ‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏´‡∏£‡πà
    safe_df["payout"] = safe_df["tickets"] * safe_df["ticket_price"] * safe_df["odds"]

    # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ñ‡∏π‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 1 ‡∏ï‡∏±‡∏ß
    win_prob = safe_df["approx_prob"].sum()

    # ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
    st.subheader("üìä ‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∏‡∏ô")
    st.dataframe(safe_df[["number", "odds", "ticket_price", "approx_prob", "tickets", "used_money", "payout"]])

    st.success(f"‚úÖ ‡πÉ‡∏ä‡πâ‡∏á‡∏ö‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡πÑ‡∏õ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {used_total:.2f} ‡∏ö‡∏≤‡∏ó")
    st.info(f"üéØ ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ñ‡∏π‡∏Å‡∏£‡∏ß‡∏°: {win_prob*100:.2f}%")

    # ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á
    st.subheader("‚ö†Ô∏è ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡πÇ‡∏î‡∏¢‡∏£‡∏ß‡∏°")
    if win_prob < 0.5:
        st.error("‚ùå ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏™‡∏π‡∏á‡∏°‡∏≤‡∏Å (‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ñ‡∏π‡∏Å‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ 50%) ‚Äî ‡∏Ñ‡∏ß‡∏£‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡πÄ‡∏•‡πà‡∏ô‡∏£‡∏≠‡∏ö‡∏ô‡∏µ‡πâ")
    elif win_prob < 0.6:
        st.warning("‚ö†Ô∏è ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏Ñ‡πà‡∏≠‡∏ô‡∏Ç‡πâ‡∏≤‡∏á‡∏™‡∏π‡∏á (‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ñ‡∏π‡∏Å 50‚Äì60%) ‚Äî ‡πÅ‡∏ó‡∏á‡πÑ‡∏î‡πâ‡∏ñ‡πâ‡∏≤‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡πÑ‡∏î‡πâ")
    else:
        st.success("‚úÖ ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ñ‡∏π‡∏Å‡πÄ‡∏Å‡∏¥‡∏ô 60% ‚Äî ‡∏£‡∏≠‡∏ö‡∏ô‡∏µ‡πâ‡∏ô‡πà‡∏≤‡πÄ‡∏•‡πà‡∏ô (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏ó‡∏∏‡∏ô‡∏û‡∏≠)")

    # ‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏ú‡∏•‡∏ï‡∏≠‡∏ö‡πÅ‡∏ó‡∏ô
    exp_profit = (safe_df["payout"] * safe_df["approx_prob"]).sum() - used_total
    st.markdown(f"**üí∞ ‡∏ú‡∏•‡∏ï‡∏≠‡∏ö‡πÅ‡∏ó‡∏ô‡∏Ñ‡∏≤‡∏î‡∏´‡∏ß‡∏±‡∏á (‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏ï‡πà‡∏≠‡∏£‡∏≠‡∏ö): {exp_profit:.2f} ‡∏ö‡∏≤‡∏ó**")

    if exp_profit < 0:
        st.error("üìâ ‡∏£‡∏∞‡∏ö‡∏ö‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏Ç‡∏≤‡∏î‡∏ó‡∏∏‡∏ô‡πÉ‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡∏¢‡∏≤‡∏ß ‚Äî ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ù‡∏∂‡∏Å‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏ô‡∏∏‡∏Å‡∏à‡∏∞‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏ß‡πà‡∏≤")
    else:
        st.success("üí∏ ‡∏£‡∏∞‡∏ö‡∏ö‡∏ô‡∏µ‡πâ‡∏ô‡πà‡∏≤‡∏à‡∏∞‡∏°‡∏µ‡∏Å‡∏≥‡πÑ‡∏£‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏£‡∏∞‡∏¢‡∏∞‡∏¢‡∏≤‡∏ß ‚Äî ‡∏ñ‡πâ‡∏≤‡πÅ‡∏ó‡∏á‡∏ï‡∏≤‡∏°‡πÅ‡∏ú‡∏ô‡∏ô‡∏µ‡πâ")
