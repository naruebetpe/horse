import streamlit as st
import pandas as pd
import numpy as np

st.title("üêé ‡πÅ‡∏≠‡∏õ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÅ‡∏ó‡∏á‡∏°‡πâ‡∏≤‡∏≠‡∏±‡∏à‡∏â‡∏£‡∏¥‡∏¢‡∏∞ (‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Å‡∏≥‡πÑ‡∏£/‡∏Ç‡∏≤‡∏î‡∏ó‡∏∏‡∏ô)")

st.markdown("### ‚û§ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏°‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì")
num_horses = st.number_input("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏°‡πâ‡∏≤", min_value=2, max_value=50, value=10)
budget = st.number_input("‡∏á‡∏ö‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏£‡∏ß‡∏° (‡∏ö‡∏≤‡∏ó)", min_value=1.0, value=500.0, step=10.0)
winning_number = st.number_input("‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏°‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ä‡∏ô‡∏∞ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)", min_value=1, max_value=50, value=1, step=1)

st.markdown("### ‚û§ ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏°‡πâ‡∏≤‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ï‡∏±‡∏ß")
data = []
for i in range(num_horses):
    col1, col2, col3 = st.columns(3)
    with col1:
        odds = st.number_input(f"üìà ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πà‡∏≠‡∏£‡∏≠‡∏á ‡∏°‡πâ‡∏≤ {i+1}", min_value=1.0, value=50.0, step=1.0, key=f"odds_{i}")
    with col2:
        price = st.number_input(f"üé´ ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡∏±‡πã‡∏ß ‡∏°‡πâ‡∏≤ {i+1}", min_value=1.0, value=20.0, step=1.0, key=f"price_{i}")
    with col3:
        name = st.text_input(f"üê¥ ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πâ‡∏≤ {i+1}", value=f"‡∏°‡πâ‡∏≤ {i+1}", key=f"name_{i}")
    data.append({"number": i+1, "name": name, "odds": odds, "price": price})

df = pd.DataFrame(data)

if st.button("üöÄ ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÅ‡∏•‡∏∞‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡πÅ‡∏ó‡∏á"):
    df["approx_prob"] = 1 / df["odds"]
    df["approx_prob"] /= df["approx_prob"].sum()
    df["expected_return"] = df["approx_prob"] * df["odds"] * df["price"]

    invest_df = df[df["approx_prob"] >= 0.03].copy()
    other_df = df[df["approx_prob"] < 0.03].copy()

    st.markdown("## ‚úÖ ‡πÅ‡∏ú‡∏ô‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡∏´‡∏•‡∏±‡∏Å (‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ä‡∏ô‡∏∞ ‚â• 3%)")
    if not invest_df.empty:
        weights = invest_df["expected_return"] / invest_df["expected_return"].sum()
        invest_df["money_alloc"] = weights * budget
        invest_df["tickets"] = np.floor(invest_df["money_alloc"] / invest_df["price"])
        invest_df["used"] = invest_df["tickets"] * invest_df["price"]
        used = invest_df["used"].sum()
        invest_df["revenue"] = invest_df["used"] * df["odds"]
        remain = budget - used

        st.dataframe(invest_df[["number", "name", "odds", "price", "approx_prob", "tickets", "used", "revenue"]])
        st.success(f"üí∏ ‡πÉ‡∏ä‡πâ‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß {used:.2f} ‡∏ö‡∏≤‡∏ó / ‡∏á‡∏ö‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠: {remain:.2f} ‡∏ö‡∏≤‡∏ó")

        if not other_df.empty and remain >= other_df["price"].min():
            st.markdown("## üéØ ‡πÅ‡∏ó‡∏á‡∏°‡πâ‡∏≤‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏î‡∏ß‡∏á (‡∏á‡∏ö‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠)")
            other_df = other_df.sort_values(by="expected_return", ascending=False)
            other_df["tickets"] = np.floor(remain / other_df["price"])
            other_df = other_df[other_df["tickets"] > 0]
            other_df["used"] = other_df["tickets"] * other_df["price"]
            other_df["revenue"] = other_df["used"] * df["odds"]
            st.dataframe(other_df[["number", "name", "odds", "price", "approx_prob", "tickets", "used", "revenue"]])
            st.info(f"üéÅ ‡πÉ‡∏ä‡πâ‡∏á‡∏ö‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏î‡∏ß‡∏á: {other_df['used'].sum():.2f} ‡∏ö‡∏≤‡∏ó")
            used += other_df['used'].sum()

        all_bets = pd.concat([invest_df, other_df], ignore_index=True)
        winner = all_bets[all_bets["number"] == winning_number]

        if not winner.empty:
            gain = float(winner["tickets"]) * float(winner["price"]) * float(winner["odds"])
            st.success(f"üèÜ ‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ó‡∏á‡∏ñ‡∏π‡∏Å‡∏°‡πâ‡∏≤‡πÄ‡∏ö‡∏≠‡∏£‡πå {winning_number}! ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏• {gain:.2f} ‡∏ö‡∏≤‡∏ó")
        else:
            gain = 0
            st.error("üò¢ ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÅ‡∏ó‡∏á‡∏°‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ä‡∏ô‡∏∞")

        profit = gain - used
        if profit >= 0:
            st.success(f"üí∞ ‡∏Å‡∏≥‡πÑ‡∏£‡∏™‡∏∏‡∏ó‡∏ò‡∏¥: {profit:.2f} ‡∏ö‡∏≤‡∏ó")
        else:
            st.warning(f"üìâ ‡∏Ç‡∏≤‡∏î‡∏ó‡∏∏‡∏ô‡∏™‡∏∏‡∏ó‡∏ò‡∏¥: {-profit:.2f} ‡∏ö‡∏≤‡∏ó")
    else:
        st.warning("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏°‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏Å‡∏ì‡∏ë‡πå‡∏•‡∏á‡∏ó‡∏∏‡∏ô‡∏à‡∏£‡∏¥‡∏á (‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ä‡∏ô‡∏∞ ‚â• 3%)")
